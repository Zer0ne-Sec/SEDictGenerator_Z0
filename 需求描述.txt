针对个人：


针对公司：


特点：
- 可以自定义密码生成规则

模块：
手机全写，手机简写，公司，数值，特殊字符，特殊意义的字符串，年份，月份，季度，季节，姓名，设备，部门，键位，弱口令

个人：
- 规则：
    月份，特殊字符，年份
    月份，特殊字符，年份，特殊字符
    特殊字符，月份，年份
    月份，年份
    月份，年份，特殊字符

    季度，年份
    季度，年份，特殊字符
    季度，特殊字符，年份
    季度，特殊字符，年份，特殊字符

    季节，特殊字符，年份
    季节，年份，特殊字符
    特殊字符，季节，年份

    姓，名，数值
    姓名，数值
    姓，名，特殊字符，数值

    特殊字符，公司，数值
    公司，特殊字符，数值
    公司，特殊字符，年份
    公司，数值
    公司，数值，特殊字符
    公司，特殊字符

    公司，特殊字符，数值，特殊字符
    公司，特殊字符，手机，特殊字符
    公司，特殊字符，姓，名，手机，特殊字符

    设备，数值
    设备，特殊字符，数值

    域名，数值
    域名，特殊字符，数值
    域名，特殊字符，年份

    部门，数值
    部门，特殊字符，数值

    数值，键位

    手机，姓，名

根据规则生成字典：
元素可以动态的增加或删除
有一个定义元素的地方：
如：
1 - 手机全写
2 - 手机简写
3 - 公司
4 - 数值
5 - 特殊字符
6 - 特殊意义的字符串
7 - 年份
8 - 月份
9 - 季度
10 - 季节
11 - 姓名
12 - 设备
13 - 部门
13 - 键位
14 - 弱口令


规则也可以自定义：【需要编写脚本】
------解析模块-----
- 以空格分割每个元素及相应的规则
- 以$分割每个规则
- 以元素做为每个规则的输入
- 以前一个规则的输出做为下一个规则的输入
- 输出存储于redis/sqlite/文件？？？
public String Parse(String item){
    //一条规则
    //分成每一个元素及相应的处理规则
    List<String> source = new List<String>(item.splie(" "));
    for sou in source
    {
        // 如果entry中没有$，表示原样输出该元素
        if '$' not in sou:
            return sou;
        // entry中有$,表示元素需要利用规则进行处理
        // 提取出entry中的规则
        List<String> guize = new List<String>(sou.splite("$")[1:]);
        // 提取出entry中的元素
        String yuansu = sou.splite("$")[0];
        // 对于每一条规则
        for i in guize:
            // 如果该条规则没有参数
            if '{' not in i:
                // 如果没有参数，则i为函数名
                // 根据函数名，查找函数
                String func = lookup(i);
                // 执行函数
                yuansu = func(yuansu);
            else{
                // i中有参数
                // 提取出i中的函数名
                String func = lookup(i.splite("{")[0]);
                String optionsStr = i.splite("{")[1]).splite("}")[0];
                // 提取出参数列表
                List<String> options = optionsStr.splite(",")[:];
                // 执行函数
                yuansu = func(yuansu,options);
            }
    }
}

------
public String Translate(String module,String type,int min,int max){
}
T - Translate
L - Length
REP - Repeat
REV - Reverse

部门$T{U,2,}$L{1,3} 特殊字符$L{1,3} 数值
$L{num,num} : 该模块的字符个数.若无，则无要求
- 若前面的字符串的个数不为1，且字符串个数不在min和max之间，则pass
- 若前面的字符串个数为1，则从前面字符串的来源中抽取个数为1的字符组成字符串，个数分布在min到max

$T{U|L,num,num} : 对该模块进行大小写变换。
    - U : 该模块中的大写字符个数
    - L : 该模块中的小写字符个数
$REP{num,num} : 该模块重复的次数
$REV : 反转该模块中的字符



所有的字典目录，可自定义增删
所有的处理规则，可自定义增删
所有的字典工具，可自定义修改

预估使用技术：
- 类加载器
- 反射
- SQLiteDB
- Swing图形界面开发

预估功能：
- 解析模块
- 编辑器模块
- 文件读取模块
- 数据写入模块
- 字典工具模块